{"version":3,"sources":["../src/routes/getFolderRoute.ts"],"names":["fs_1","__importDefault","require","errors_1","utils_1","exports","getFolderRoute","method","url","schema","querystring","path","type","response","200","properties","result","404","code","message","preHandler","request","reply","__awaiter","isPath","query","status","send","InvalidParamsError","JSON","stringify","handler","files","default","readdirSync","withFileTypes","view","err"],"mappings":"skDAEA,IAAAA,KAAAC,gBAAAC,QAAA,OAEAC,SAAAD,QAAA,aACAE,QAAAF,QAAA,YASaG,QAAAC,eAA+B,CAC1CC,OAAQ,MACRC,IAAK,UACLC,OAAQ,CACNC,YAAa,CACXC,KAAM,CAAEC,KAAM,WAEhBC,SAAU,CACRC,IAAK,CACHF,KAAM,SACNG,WAAY,CACVC,OAAQ,CAAEJ,KAAM,WAGpBK,IAAK,CACHL,KAAM,SACNG,WAAY,CACVG,KAAM,CAAEN,KAAM,UACdO,QAAS,CAAEP,KAAM,cAKzBQ,WAAY,SAAOC,EAAcC,GAAK,OAAAC,eAAA,OAAA,OAAA,EAAA,W,oCACpC,OAAKnB,QAAAoB,OAAOH,EAAQI,MAAMd,M,IACxB,CAAA,EAAOW,EACJI,OAAO,KACPC,KACCxB,SAAAyB,mBAAmBC,KAAKC,UAAU,CAAEL,MAAOJ,EAAQI,MAAMd,eAIjEoB,QAAS,SAAOV,EAAcC,GAAK,OAAAC,eAAA,OAAA,OAAA,EAAA,W,0CACjC,IAKE,OAJMS,EAAQhC,KAAAiC,QAAGC,YAAYb,EAAQI,MAAMd,KAAM,CAC/CwB,eAAe,IAGjB,CAAA,EAAOb,EAAMc,KAAK,aAAc,CAAEJ,MAAKA,EAAErB,KAAMU,EAAQb,OACvD,MAAO6B,GACP,MAAA,CAAA,EAAOf,EAAMI,OAAO,KAAKC,KAAKU,I","file":"getFolderRoute.js","sourcesContent":["import { RouteOptions, FastifyRequest } from \"fastify\";\nimport { RouteGenericInterface } from \"fastify/types/route\";\nimport fs from \"fs\";\nimport { IncomingMessage, Server } from \"http\";\nimport { InvalidParamsError } from \"../errors\";\nimport { isPath } from \"../utils\";\n\ninterface Req\n  extends FastifyRequest<RouteGenericInterface, Server, IncomingMessage> {\n  query: {\n    path: string;\n  };\n}\n\nexport const getFolderRoute: RouteOptions = {\n  method: \"GET\",\n  url: \"/folder\",\n  schema: {\n    querystring: {\n      path: { type: \"string\" },\n    },\n    response: {\n      200: {\n        type: \"object\",\n        properties: {\n          result: { type: \"array\" },\n        },\n      },\n      404: {\n        type: \"object\",\n        properties: {\n          code: { type: \"string\" },\n          message: { type: \"string\" },\n        },\n      },\n    },\n  },\n  preHandler: async (request: Req, reply) => {\n    if (!isPath(request.query.path)) {\n      return reply\n        .status(404)\n        .send(\n          InvalidParamsError(JSON.stringify({ query: request.query.path }))\n        );\n    }\n  },\n  handler: async (request: Req, reply) => {\n    try {\n      const files = fs.readdirSync(request.query.path, {\n        withFileTypes: true,\n      });\n\n      return reply.view(\"folder.pug\", { files, path: request.url });\n    } catch (err) {\n      return reply.status(404).send(err);\n    }\n  },\n};\n"]}